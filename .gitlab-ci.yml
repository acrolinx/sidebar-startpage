stages:
  - verify
  - build
  - deploy

#Cache node modules, npm install will take care of minor updates
cache:
  untracked: false
  policy: pull-push
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

include:
  - project: acrolinx/integrations/gitlab-ci-templates
    ref: master
    file: 'npm/check-licenses-gitlab.yml'

  - project: acrolinx/integrations/gitlab-ci-templates
    ref: master
    file: 'npm/vulnerable-prod-dependency-check.yml'

sonarcloud-check:
  stage: verify
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - tags

# Build on Linux
linux:build:
  stage: build
  image: node:lts
  before_script:
    - apt update -y
    - apt upgrade -y
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome-stable_current_amd64.deb
  script:
    - node --version
    - npm ci
    - npm run buildDistWithNPMLinuxOnly
  artifacts:
    paths:
      - tmp/
      - dist/
      - node_modules/
  only:
    - merge_requests
    - master
    - tags
    - DITA_POC

# Build on Mac
mac:build:
  stage: build
  tags:
    - osx
    - mac
    - integrations
  script:
    - node --version
    - npm ci
    - npm run buildDistButNotNPM
  only:
    - merge_requests
    - master
    - tags


# Build on Windows
windows:build:
  stage: build
  tags:
    - windows-build-node-integrations
  script:
    - node --version
    - npm ci
    - npm run buildDistButNotNPM
  only:
    - merge_requests
    - master
    - tags


linux:npm-deploy:
  image: node:16-alpine
  stage: deploy
  variables:
    NPM_TOKEN: ${NPM_TOKEN}
  needs: ["linux:build"]
  script:
    - npm --version
    - npm config set registry=https://registry.npmjs.org/
    - npm config set @acrolinx:registry=https://registry.npmjs.org/
    - npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
    - npm ci
    - npm publish --verbose --access public
  only:
    - tags


## Beta release stage for DITA POC
linux:npm-deploy-beta:
  image: node:16-alpine
  stage: deploy
  variables:
    NPM_TOKEN: ${NPM_TOKEN}
  needs: ["linux:build"]
  script:
    - npm --version
    - npm config set registry=https://registry.npmjs.org/
    - npm config set @acrolinx:registry=https://registry.npmjs.org/
    - npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
    - npm ci
    - npm publish --verbose --access public --tag beta
  only:
    - DITA_POC

linux:maven-deploy-snapshot:
  image: maven:3.6-jdk-11
  stage: deploy
  variables:
    STAGE: "snapshot"
  needs: ["linux:build"]
  before_script:
    - mkdir -p tmp/s3/v14
    - cp -r tmp/dist tmp/s3/v14/dev
    - chmod +x ./gitlab-build-ci.sh
  script:
    - ./gitlab-build-ci.sh
  only:
    - master

linux:maven-deploy-release:
  image: maven:3.6-jdk-11
  stage: deploy
  variables:
    STAGE: "release"
  needs: ["linux:build"]
  before_script:
    - mkdir -p tmp/s3/v14
    - cp -r tmp/dist tmp/s3/v14/dev
    - chmod +x ./gitlab-build-ci.sh
  script:
    - ./gitlab-build-ci.sh
  only:
    - tags




