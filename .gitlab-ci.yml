stages:
  - build
  - deploy


# Build on Linux
linux:build:
  stage: build
  image: node:lts
  before_script:
    - apt update -y
    - apt upgrade -y
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome-stable_current_amd64.deb
  script:
    - node --version
    - npm ci
    - npm run buildDistWithNPMLinuxOnly
  artifacts:
    paths:
      - tmp/
      - dist/
      - node_modules/


# Build on Mac
.mac:build:
  stage: build
  tags:
    - osx
    - mac
    - integrations
  script:
    - node --version
    - npm ci
    - npm run buildDistButNotNPM
  only:
    - merge_requests
    - master
    - tags


# Build on Windows
.windows:build:
  stage: build
  tags:
    - windows-build-node-integrations
  script:
    - node --version
    - npm ci
    - npm run buildDistButNotNPM
  only:
    - merge_requests
    - master
    - tags


.linux:npm-deploy:
  image: node:16-alpine
  stage: deploy
  variables:
    NPM_TOKEN: ${NPM_TOKEN}
  needs: ["linux:build"]
  script:
    - npm --version
    - npm config set registry=https://registry.npmjs.org/
    - npm config set @acrolinx:registry=https://registry.npmjs.org/
    - npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
    - npm ci
    - npm publish --verbose --access public
  only:
    - tags

windows:beta_deploy:
  stage: deploy 
  tags:
    - windows-build-node-integrations
  script:
     # Set required variables as windows Env variables
    - $Env:COPYARTIFACT_BUILD_NUMBER_STARTPAGE=$CI_PIPELINE_IID
    - $Env:SIGNINGPWD=$code_signing_key
    - $Env:CI_JOB_TOKEN=$CI_JOB_TOKEN

    - curl.exe --location --output artifacts_certificates.zip --header JOB-TOKEN:$CI_JOB_TOKEN https://gitlab.com/api/v4/projects/20636229/jobs/artifacts/master/download?job=cert_artifact
    - Expand-Archive -Path .\artifacts_certificates.zip -DestinationPath .\certificate -Force
    - Write-Host "Get Latest Nuget"
    - curl.exe --location --output nuget.exe "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"

    - ./gitlab-build-ci.bat > execution.log
  artifacts:
    when: always
    paths:  
    - build\script.log
    - execution.log
      
.windows:deploy:
  stage: deploy
  variables:
    PUBLISH_PUBLIC: "true"
  tags:
    - windows-build-node-integrations
  script:
     # Set required variables as windows Env variables
    - $Env:COPYARTIFACT_BUILD_NUMBER_STARTPAGE=$CI_PIPELINE_IID
    - $Env:SIGNINGPWD=$code_signing_key
    - $Env:CI_JOB_TOKEN=$CI_JOB_TOKEN
    - $Env:NUGET_API_KEY=$NUGET_API_KEY
    - $Env:PUBLISH_PUBLIC=$PUBLISH_PUBLIC

    - curl.exe --location --output artifacts_certificates.zip --header JOB-TOKEN:$CI_JOB_TOKEN https://gitlab.com/api/v4/projects/20636229/jobs/artifacts/master/download?job=cert_artifact
    - Expand-Archive -Path .\artifacts_certificates.zip -DestinationPath .\certificate -Force

    - curl.exe --location --output nuget.exe "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"

    - ./gitlab-build-ci.bat > execution.log
  only:
    - tags
  artifacts:
    when: always
    paths:  
    - build\script.log
    - execution.log

## Beta release stage for DITA POC
.linux:npm-deploy-beta:
  image: node:16-alpine
  stage: deploy
  variables:
    NPM_TOKEN: ${NPM_TOKEN}
  needs: ["linux:build"]
  script:
    - npm --version
    - npm config set registry=https://registry.npmjs.org/
    - npm config set @acrolinx:registry=https://registry.npmjs.org/
    - npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
    - npm ci
    - npm publish --verbose --access public --tag beta
  only:
    - DITA_POC

.linux:maven-deploy-snapshot:
  image: maven:3.6-jdk-11
  stage: deploy
  variables:
    STAGE: "snapshot"
  needs: ["linux:build"]
  before_script:
    - mkdir -p tmp/s3/v14
    - cp -r tmp/dist tmp/s3/v14/dev
    - chmod +x ./gitlab-build-ci.sh
  script:
    - ./gitlab-build-ci.sh
  only:
    - master

.linux:maven-deploy-release:
  image: maven:3.6-jdk-11
  stage: deploy
  variables:
    STAGE: "release"
  needs: ["linux:build"]
  before_script:
    - mkdir -p tmp/s3/v14
    - cp -r tmp/dist tmp/s3/v14/dev
    - chmod +x ./gitlab-build-ci.sh
  script:
    - ./gitlab-build-ci.sh
  only:
    - tags




